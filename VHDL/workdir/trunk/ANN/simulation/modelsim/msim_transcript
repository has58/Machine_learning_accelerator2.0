# Reading C:/altera/12.1/modelsim_ase/tcl/vsim/pref.tcl 
# do Artificial_Neural_Networks_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying C:\altera\12.1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\12.1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {C:/Users/Haider/master_project/VHDL/workdir/trunk/ANN/ANN_lib.vhd}
# Model Technology ModelSim ALTERA vcom 10.1b Compiler 2012.04 Apr 27 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling package ANN_lib
# -- Compiling package body ANN_lib
# -- Loading package ANN_lib
# vcom -93 -work work {C:/Users/Haider/master_project/VHDL/workdir/trunk/ANN/Artificial_Neural_Networks.vhd}
# Model Technology ModelSim ALTERA vcom 10.1b Compiler 2012.04 Apr 27 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package ANN_lib
# -- Compiling entity Artificial_Neural_Networks
# -- Compiling architecture Artificial_Neural_Networks_arch of Artificial_Neural_Networks
# 
vsim -voptargs=+acc work.artificial_neural_networks(artificial_neural_networks_arch)
# vsim -voptargs=+acc work.artificial_neural_networks(artificial_neural_networks_arch) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.ann_lib(body)
# Loading work.artificial_neural_networks(artificial_neural_networks_arch)
add wave -position insertpoint  \
sim:/artificial_neural_networks/clk
force -freeze sim:/artificial_neural_networks/clk 0 0, 1 {50 ps} -r 100
run
